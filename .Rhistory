as.numeric(df_nonfungible$pop_size) * as.numeric(df_nonfungible$pop_pin)
scalingfactor_nonfungible <- drug_budget.nonfungible/sum(df_nonfungible$conscost_maxcoverage)
scen7_coverage_nonfungible <- df_nonfungible[c("category", "code",  "intervention")]
scen7_coverage_nonfungible$coverage =  as.numeric(df_nonfungible$feascov)  * scalingfactor_nonfungible
colnames(scen7_coverage_nonfungible) = c("Program", "Code", "Intervention", "Coverage")
scen7_coverage <- rbind(scen7_coverage_fungible, scen7_coverage_nonfungible)
scen6
df_fungible <- df[df$donor_funded == "No", ]
drug_budget.fungible <- base.drugbudget - 172324161
find_optimal_package(data.frame = df_fungible, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = drug_budget.fungible, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = no.hr.limit,
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
scen7 = cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
scen7_coverage_fungible = solution
scen7_coverage_fungible = cbind(category, code,  intervention, solution)
colnames(scen7_coverage_fungible) = c("Program", "code", "Intervention", "Coverage")
# For the final solution, update the above results to include interventions funded from the non-fungible component of the budget
# Since, the non-fungible drug budget is smaller that the cost of 100% cover of these interventions, the coverage is scaled down
# in order to get a package which is feasible to deliver within the size of the drug budget
drug_budget.nonfungible <- 172324161 + (1-drug_exp.prop) * drug_budget.fungible # in case any budget remains after the above analysis
df_nonfungible <- df[df$donor_funded == "Yes", ]
df_nonfungible$conscost_maxcoverage <- df_nonfungible$conscost * as.numeric(df_nonfungible$feascov) *
as.numeric(df_nonfungible$pop_size) * as.numeric(df_nonfungible$pop_pin)
scalingfactor_nonfungible <- drug_budget.nonfungible/sum(df_nonfungible$conscost_maxcoverage)
scen7_coverage_nonfungible <- df_nonfungible[c("category", "code",  "intervention")]
scen7_coverage_nonfungible$coverage =  as.numeric(df_nonfungible$feascov)  * scalingfactor_nonfungible
colnames(scen7_coverage_nonfungible) = c("Program", "code", "Intervention", "Coverage")
scen7_coverage <- rbind(scen7_coverage_fungible, scen7_coverage_nonfungible)
#icer, dalys, cet_soln, drug_exp, hr_use
merged_df = merge(x = df, y = scen7_coverage, by = "code",
all.x = TRUE)
colnames(merged_df)
cet_input
df_fungible <- df[df$donor_funded == "No", ]
drug_budget.fungible <- base.drugbudget - 172324161
find_optimal_package(data.frame = df_fungible, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = drug_budget.fungible, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = no.hr.limit,
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
scen7 = cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
scen7_coverage_fungible = solution
scen7_coverage_fungible = cbind(category, code,  intervention, solution)
colnames(scen7_coverage_fungible) = c("Program", "code", "Intervention", "Coverage")
cet_input
base.cet
pos_nethealth.count <- sum(df$ce_cost/df$ce_dalys <= base.cet)
df$ce_cost
pos_nethealth.count <- sum(as.numeric(df$ce_cost)/as.numeric(df$ce_dalys) <= base.cet)
pos_nethealth.count
scen5
intervention.count <- sum(merged_df$Coverage > 0)
intervention.count
colnames(merged_df)
solution_dalysaverted <- merged_df$Coverage * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size) * as.numeric(merged_df$ce_dalys)
dalys_averted <- round(sum(unlist(lapply(solution_dalysaverted, sum))),2)
cons_hr
colnames(merged_df)
medstaff.need <- merged_df[c("hr_medoff")] + merged_df[c("hr_clinoff")] + merged_df[c("hr_medass")] # Medical officer + Clinical officer + Medical Assistant
merged_df["hr_medoff"]
merged_df[c("hr_clinoff")]
merged_df[c("hr_medass")]
merged_df[c("hr_medoff")] + merged_df[c("hr_clinoff")] + merged_df[c("hr_medass")]
merged_df[c("hr_medoff")] + merged_df[c("hr_clinoff")]
nursingstaff.need <- merged_df[c("hr_nuroff")] + merged_df[c("hr_nurtech")] # Nurse officer + Nurse midwife
nursingstaff.need <- as.numeric(merged_df[c("hr_nuroff")]) + as.numeric(merged_df[c("hr_nurtech")]) # Nurse officer + Nurse midwife
nursingstaff.need <- as.numeric(merged_df["hr_nuroff"]) + as.numeric(merged_df["hr_nurtech"]) # Nurse officer + Nurse midwife
as.numeric(merged_df[c("hr_nuroff")])
as.numeric(merged_df[c("hr_nuroff")])
as.numeric(merged_df[c("hr_nuroff")])
merged_df[c("hr_nuroff")]
merged_df[c("hr_nuroff")]+1
hrneed
hrneed <<- merged_df[c("hr_medoff", "hr_clinoff", "hr_medass",
"hr_nuroff", "hr_nurtech",
"hr_pharm", "hr_pharmtech", "hr_pharmass",
"hr_laboff", "hr_labtech", "hr_labass")] # Number of minutes of health worker time requires per intervention per person
hrneed <- as.data.frame(apply(hrneed,2,as.numeric))
hrneed <- merged_df[c("hr_medoff", "hr_clinoff", "hr_medass",
"hr_nuroff", "hr_nurtech",
"hr_pharm", "hr_pharmtech", "hr_pharmass",
"hr_laboff", "hr_labtech", "hr_labass")] # Number of minutes of health worker time requires per intervention per person
hrneed <- as.data.frame(apply(hrneed,2,as.numeric))
medstaff.need <- hr_minutes_need[c("hr_medoff")] + hr_minutes_need[c("hr_clinoff")] + hr_minutes_need[c("hr_medass")] # Medical officer + Clinical officer + Medical Assistant
nursingstaff.need <- hr_minutes_need[c("hr_nuroff")] + hr_minutes_need[c("hr_nurtech")] # Nurse officer + Nurse midwife
pharmstaff.need <- hr_minutes_need[c("hr_pharm")] + hr_minutes_need[c("hr_pharmtech")] + hr_minutes_need[c("hr_pharmass")] # Pharmacist + Pharmacist Technician + Pharmacist Assistant
labstaff.need <- hr_minutes_need[c("hr_laboff")] + hr_minutes_need[c("hr_labtech")] + hr_minutes_need[c("hr_labass")] # Lab officer + Lab technician + Lab assistant
hr_minutes_need <- hrneed * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size)  # HR minutes required to deliver intervention to all cases in need
medstaff.need <- hr_minutes_need[c("hr_medoff")] + hr_minutes_need[c("hr_clinoff")] + hr_minutes_need[c("hr_medass")] # Medical officer + Clinical officer + Medical Assistant
nursingstaff.need <- hr_minutes_need[c("hr_nuroff")] + hr_minutes_need[c("hr_nurtech")] # Nurse officer + Nurse midwife
pharmstaff.need <- hr_minutes_need[c("hr_pharm")] + hr_minutes_need[c("hr_pharmtech")] + hr_minutes_need[c("hr_pharmass")] # Pharmacist + Pharmacist Technician + Pharmacist Assistant
labstaff.need <- hr_minutes_need[c("hr_laboff")] + hr_minutes_need[c("hr_labtech")] + hr_minutes_need[c("hr_labass")] # Lab officer + Lab technician + Lab assistant
cbind(medstaff.need, nursingstaff.need, pharmstaff.need, labstaff.need)
hrneed <- as.data.frame(apply(hrneed,2,as.numeric))
hr_minutes_need <- hrneed * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size)  # HR minutes required to deliver intervention to all cases in need
medstaff.need <- hr_minutes_need[c("hr_medoff")] + hr_minutes_need[c("hr_clinoff")] + hr_minutes_need[c("hr_medass")] # Medical officer + Clinical officer + Medical Assistant
nursingstaff.need <- hr_minutes_need[c("hr_nuroff")] + hr_minutes_need[c("hr_nurtech")] # Nurse officer + Nurse midwife
pharmstaff.need <- hr_minutes_need[c("hr_pharm")] + hr_minutes_need[c("hr_pharmtech")] + hr_minutes_need[c("hr_pharmass")] # Pharmacist + Pharmacist Technician + Pharmacist Assistant
labstaff.need <- hr_minutes_need[c("hr_laboff")] + hr_minutes_need[c("hr_labtech")] + hr_minutes_need[c("hr_labass")] # Lab officer + Lab technician + Lab assistant
solution_hruse <- merged_df$Coverage * cbind(medstaff.need, nursingstaff.need, pharmstaff.need, labstaff.need)
total_hruse <- colSums(solution_hruse, na.rm = FALSE, dims = 1) # Number of minutes per health worker cadre utlitised by the optimal solution
hruse.prop <- round(total_hruse/cons_hr.limit_base, 2)  # Proportion of HR time available used by the optimal solution
colnames(hruse.prop) <- hr_cadres
solution_hruse <- merged_df$Coverage * cbind(medstaff.need, nursingstaff.need, pharmstaff.need, labstaff.need)
total_hruse <- colSums(solution_hruse, na.rm = FALSE, dims = 1) # Number of minutes per health worker cadre utlitised by the optimal solution
hruse.prop <- round(total_hruse/cons_hr.limit_base, 2)  # Proportion of HR time available used by the optimal solution
hr_cadres <- c("Clinical", "Nursing", "Pharmaceutical", "Lab")
colnames(hruse.prop) <- hr_cadres
hruse.prop
cons_hr.limit_base
head(hrneed)
head(hr_minutes_need)
medstaff.need <- hr_minutes_need[c("hr_medoff")] + hr_minutes_need[c("hr_clinoff")] + hr_minutes_need[c("hr_medass")] # Medical officer + Clinical officer + Medical Assistant
nursingstaff.need <- hr_minutes_need[c("hr_nuroff")] + hr_minutes_need[c("hr_nurtech")] # Nurse officer + Nurse midwife
pharmstaff.need <- hr_minutes_need[c("hr_pharm")] + hr_minutes_need[c("hr_pharmtech")] + hr_minutes_need[c("hr_pharmass")] # Pharmacist + Pharmacist Technician + Pharmacist Assistant
labstaff.need <- hr_minutes_need[c("hr_laboff")] + hr_minutes_need[c("hr_labtech")] + hr_minutes_need[c("hr_labass")] # Lab officer + Lab technician + Lab assistant
solution_hruse <- merged_df$Coverage * cbind(medstaff.need, nursingstaff.need, pharmstaff.need, labstaff.need)
head(solution_hruse)
head(merged_df$Coverage)
0.1358509*(46483935 +  35086869 +  5848602)
head(cons_hr.limit_base)
medstaffmins.limit
(medstaffmins.limit/medstaff.limit)
solution_hruse <- merged_df$Coverage * cbind(medstaff.need/(medstaffmins.limit/medstaff.limit), nursingstaff.need/(nursingstaffmins.limit/nursingstaff.limit),
pharmstaff.need/(pharmstaffmins.limit/pharmstaff.limit), labstaff.need/(labstaffmins.limit/labstaff.limit))
total_hruse <- colSums(solution_hruse, na.rm = FALSE, dims = 1) # Number of minutes per health worker cadre utlitised by the optimal solution
hruse.prop <- round(total_hruse/cons_hr.limit_base, 2)  # Proportion of HR time available used by the optimal solution
hr_cadres <- c("Clinical", "Nursing", "Pharmaceutical", "Lab")
colnames(hruse.prop) <- hr_cadres
hruse.prop
colnames(merged_df)
cet_soln <- max(merged_df$icer[merged_df$Coverage > 0])
merged_df$Coverage > 0
merged_df$icer[merged_df$Coverage > 0]
merged_df$icer
merged_df$icer = merged_df$ce_cost/merged_df$ce_dalys
merged_df$icer = as.numeric(merged_df$ce_cost)/as.numeric(merged_df$ce_dalys)
cet_soln <- max(merged_df$icer[merged_df$Coverage > 0])
cet_soln
scen7 <- cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
scen7
scen6
scen5
df_fungible <- df[df$donor_funded == "No", ]
drug_budget.fungible <- base.drugbudget - 172324161
find_optimal_package(data.frame = df_fungible, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = drug_budget.fungible, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = no.hr.limit,
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
scen7_fungible = cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
scen7_coverage_fungible = solution
scen7_coverage_fungible = cbind(category, code,  intervention, solution)
colnames(scen7_coverage_fungible) = c("Program", "code", "Intervention", "Coverage")
scen7_fungible
scen7
scen7_coverage
scenarios = c("No constraints",
"CET ($65.8)",
"CET ($164.7)",
"CET ($65.8) + Demand constraint",
"CET ($65.8) + Demand constraint + Drug budget",
"CET ($65.8) + Demand constraint + Drug budget + HR constraint",
"CET ($65.8) + Demand constraint + Drug budget + Donor constraint")
summary = rbind(scen1, scen2, scen3, scen4, scen5, scen6, scen7)
summary = cbind(scenarios, summary)
colnames(summary) = c("Constraints applied", "Number of interventions with positive NHB", "Number of interventions in the optimal package",
"Total DALYs averted", "Highest ICER in the HBP", "% of drug budget required",
"% of Clinical staff capacity required", "% of Nursing staff capacity required",
"% of Pharmaceutical staff capacity required", "% of Lab staff capacity required")
coverage_byscenario = cbind(data.frame$category, data.frame$code, data.frame$intervention, scen1_coverage, scen2_coverage, scen3_coverage, scen4_coverage, scen5_coverage, scen6_coverage, scen7_coverage)
colnames(coverage_byscenario) = c("Program", "Intervention code", "Intervention", scenarios)
sheets <- list("output_and_resourceuse" = summary, "optimal_coverage" = coverage_byscenario)
write_xlsx(sheets,"2_outputs/tables/scenarios_results.xlsx")
scen7
scen3_coverage
scen7_coverage
scenarios = c("No constraints",
"CET ($65.8)",
"CET ($164.7)",
"CET ($65.8) + Demand constraint",
"CET ($65.8) + Demand constraint + Drug budget",
"CET ($65.8) + Demand constraint + Drug budget + HR constraint",
"CET ($65.8) + Demand constraint + Drug budget + Donor constraint")
summary = rbind(scen1, scen2, scen3, scen4, scen5, scen6, scen7)
summary = cbind(scenarios, summary)
colnames(summary) = c("Constraints applied", "Number of interventions with positive NHB", "Number of interventions in the optimal package",
"Total DALYs averted", "Highest ICER in the HBP", "% of drug budget required",
"% of Clinical staff capacity required", "% of Nursing staff capacity required",
"% of Pharmaceutical staff capacity required", "% of Lab staff capacity required")
coverage_byscenario = cbind(data.frame$category, data.frame$code, data.frame$intervention, scen1_coverage, scen2_coverage, scen3_coverage, scen4_coverage, scen5_coverage, scen6_coverage)
coverage_byscenario = merge(x = coverage_byscenario, y = scen7_coverage[('code', 'Coverage')], by = "code",
coverage_byscenario = cbind(data.frame$category, data.frame$code, data.frame$intervention, scen1_coverage, scen2_coverage, scen3_coverage, scen4_coverage, scen5_coverage, scen6_coverage)
coverage_byscenario = merge(x = coverage_byscenario, y = scen7_coverage[c('code', 'Coverage')], by = "code",
all.x = TRUE)
scenarios = c("No constraints",
"CET ($65.8)",
"CET ($164.7)",
"CET ($65.8) + Demand constraint",
"CET ($65.8) + Demand constraint + Drug budget",
"CET ($65.8) + Demand constraint + Drug budget + HR constraint",
"CET ($65.8) + Demand constraint + Drug budget + Donor constraint")
summary = rbind(scen1, scen2, scen3, scen4, scen5, scen6, scen7)
summary = cbind(scenarios, summary)
colnames(summary) = c("Constraints applied", "Number of interventions with positive NHB", "Number of interventions in the optimal package",
"Total DALYs averted", "Highest ICER in the HBP", "% of drug budget required",
"% of Clinical staff capacity required", "% of Nursing staff capacity required",
"% of Pharmaceutical staff capacity required", "% of Lab staff capacity required")
coverage_byscenario = cbind(data.frame$category, data.frame$code, data.frame$intervention, scen1_coverage, scen2_coverage, scen3_coverage, scen4_coverage, scen5_coverage, scen6_coverage)
coverage_byscenario = merge(x = coverage_byscenario, y = scen7_coverage[c('code', 'Coverage')], by = "code",
all.x = TRUE)
coverage_byscenario
colnames(coverage_byscenario)
View(subs_list)
names(coverage_byscenario)[names(coverage_byscenario) == 'data.frame$code'] <- 'code'
names(coverage_byscenario)[names(coverage_byscenario) == 'data.frame$code'] <- 'code'
coverage_byscenario = merge(x = coverage_byscenario, y = scen7_coverage[c('code', 'Coverage')], by = "code",
all.x = TRUE)
scenarios[-1]
scenarios
scenarios[-7]
colnames(coverage_byscenario) = c("Program", "code", "Intervention", scenarios[-length(scenarios)])
coverage_byscenario = merge(x = coverage_byscenario, y = scen7_coverage[c('code', 'Coverage')], by = "code",
all.x = TRUE)
coverage_byscenario
scen7_coverage
colnames)scen7_coverage
colnames(scen7_coverage)
colnames(coverage_byscenario) = c("Program", "Intervention code", "Intervention", scenarios)
coverage_byscenario
scen7_coverage[c('code', 'Coverage')]
scenarios = c("No constraints",
"CET ($65.8)",
"CET ($164.7)",
"CET ($65.8) + Demand constraint",
"CET ($65.8) + Demand constraint + Drug budget",
"CET ($65.8) + Demand constraint + Drug budget + HR constraint",
"CET ($65.8) + Demand constraint + Drug budget + Donor constraint")
summary = rbind(scen1, scen2, scen3, scen4, scen5, scen6, scen7)
summary = cbind(scenarios, summary)
colnames(summary) = c("Constraints applied", "Number of interventions with positive NHB", "Number of interventions in the optimal package",
"Total DALYs averted", "Highest ICER in the HBP", "% of drug budget required",
"% of Clinical staff capacity required", "% of Nursing staff capacity required",
"% of Pharmaceutical staff capacity required", "% of Lab staff capacity required")
coverage_byscenario = cbind(data.frame$category, data.frame$code, data.frame$intervention, scen1_coverage, scen2_coverage, scen3_coverage, scen4_coverage, scen5_coverage, scen6_coverage)
colnames(coverage_byscenario) = c("Program", "code", "Intervention", scenarios[-length(scenarios)])
names(coverage_byscenario)
coverage_byscenario = merge(x = coverage_byscenario, y = scen7_coverage[c('code', 'Coverage')], by = "code",
all.x = TRUE)
names(coverage_byscenario)
colnames(coverage_byscenario) = c("Program", "Intervention code", "Intervention", scenarios)
names(coverage_byscenario)
sheets <- list("output_and_resourceuse" = summary, "optimal_coverage" = coverage_byscenario)
write_xlsx(sheets,"2_outputs/tables/scenarios_results.xlsx")
scen7_coverage_fungible
gen_resourceuse_graphs(plot_title = "Scenario 7" , plot_subtitle = "CET = $66 + Demand constraint + Drug Budget \n+ Donor constraints ", file_name = "2_outputs/figures/resourceuse_scen7.pdf")
cons_drug.limit_base <- base.drugbudget # re-adjust since this will be equal to only government budget
cons_hr.limit_base <- cons_hr.limit_base[,1:3]
gen_resourceuse_graphs(plot_title = "Scenario 7" , plot_subtitle = "CET = $66 + Demand constraint + Drug Budget \n+ Donor constraints ", file_name = "2_outputs/figures/resourceuse_scen7.pdf")
base.drugbudget
cons_hr.limit_base
cons_drug.limit_base <- base.drugbudget # re-adjust since this will be equal to only government budget
cons_hr.limit_base <- cons_hr.limit_base[,1:3]
df_fungible <- df[df$donor_funded == "No", ]
drug_budget.fungible <- base.drugbudget - 172324161
find_optimal_package(data.frame = df_fungible, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = drug_budget.fungible, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = no.hr.limit,
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
scen7_fungible = cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
scen7_coverage_fungible = solution
scen7_coverage_fungible = cbind(category, code,  intervention, solution)
colnames(scen7_coverage_fungible) = c("Program", "code", "Intervention", "Coverage")
# For the final solution, update the above results to include interventions funded from the non-fungible component of the budget
# Since, the non-fungible drug budget is smaller that the cost of 100% cover of these interventions, the coverage is scaled down
# in order to get a package which is feasible to deliver within the size of the drug budget
drug_budget.nonfungible <- 172324161 + (1-drug_exp.prop) * drug_budget.fungible # in case any budget remains after the above analysis
df_nonfungible <- df[df$donor_funded == "Yes", ]
df_nonfungible$conscost_maxcoverage <- df_nonfungible$conscost * as.numeric(df_nonfungible$feascov) *
as.numeric(df_nonfungible$pop_size) * as.numeric(df_nonfungible$pop_pin)
scalingfactor_nonfungible <- drug_budget.nonfungible/sum(df_nonfungible$conscost_maxcoverage)
scen7_coverage_nonfungible <- df_nonfungible[c("category", "code",  "intervention")]
scen7_coverage_nonfungible$coverage =  as.numeric(df_nonfungible$feascov)  * scalingfactor_nonfungible
colnames(scen7_coverage_nonfungible) = c("Program", "code", "Intervention", "Coverage")
scen7_coverage <- rbind(scen7_coverage_fungible, scen7_coverage_nonfungible)
merged_df = merge(x = df, y = scen7_coverage, by = "code",
all.x = TRUE)
pos_nethealth.count <- sum(as.numeric(merged_df$ce_cost)/as.numeric(merged_df$ce_dalys) <= base.cet)
intervention.count <- sum(merged_df$Coverage > 0)
solution_dalysaverted <- merged_df$Coverage * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size) * as.numeric(merged_df$ce_dalys)
dalys_averted <- round(sum(unlist(lapply(solution_dalysaverted, sum))),2)
merged_df$icer = as.numeric(merged_df$ce_cost)/as.numeric(merged_df$ce_dalys)
cet_soln <- max(merged_df$icer[merged_df$Coverage > 0])
solution_drugexp <- merged_df$Coverage * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size) * as.numeric(merged_df$conscost)
drug_exp.prop <- round(sum(unlist(lapply(solution_drugexp, sum))),2)/base.drugbudget
hrneed <- merged_df[c("hr_medoff", "hr_clinoff", "hr_medass",
"hr_nuroff", "hr_nurtech",
"hr_pharm", "hr_pharmtech", "hr_pharmass",
"hr_laboff", "hr_labtech", "hr_labass")] # Number of minutes of health worker time requires per intervention per person
hrneed <- as.data.frame(apply(hrneed,2,as.numeric))
hr_minutes_need <- hrneed * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size)  # HR minutes required to deliver intervention to all cases in need
medstaff.need <- hr_minutes_need[c("hr_medoff")] + hr_minutes_need[c("hr_clinoff")] + hr_minutes_need[c("hr_medass")] # Medical officer + Clinical officer + Medical Assistant
nursingstaff.need <- hr_minutes_need[c("hr_nuroff")] + hr_minutes_need[c("hr_nurtech")] # Nurse officer + Nurse midwife
pharmstaff.need <- hr_minutes_need[c("hr_pharm")] + hr_minutes_need[c("hr_pharmtech")] + hr_minutes_need[c("hr_pharmass")] # Pharmacist + Pharmacist Technician + Pharmacist Assistant
labstaff.need <- hr_minutes_need[c("hr_laboff")] + hr_minutes_need[c("hr_labtech")] + hr_minutes_need[c("hr_labass")] # Lab officer + Lab technician + Lab assistant
solution_hruse <- merged_df$Coverage * cbind(medstaff.need/(medstaffmins.limit/medstaff.limit), nursingstaff.need/(nursingstaffmins.limit/nursingstaff.limit),
pharmstaff.need/(pharmstaffmins.limit/pharmstaff.limit), labstaff.need/(labstaffmins.limit/labstaff.limit))
total_hruse <- colSums(solution_hruse, na.rm = FALSE, dims = 1) # Number of minutes per health worker cadre utlitised by the optimal solution
hruse.prop <- round(total_hruse/cons_hr.limit_base, 2)  # Proportion of HR time available used by the optimal solution
hr_cadres <- c("Clinical", "Nursing", "Pharmaceutical", "Lab")
colnames(hruse.prop) <- hr_cadres
scen7 <- cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
# Generate resource use graph for scenario 7
cons_drug.limit_base <- base.drugbudget # re-adjust since this will be equal to only government budget
cons_hr.limit_base <- cons_hr.limit_base[,1:3]
gen_resourceuse_graphs(plot_title = "Scenario 7" , plot_subtitle = "CET = $66 + Demand constraint + Drug Budget \n+ Donor constraints ", file_name = "2_outputs/figures/resourceuse_scen7.pdf")
hruse.prop
solution_drugexp
solution_hruse
sum(solution_drugexp)
base.drugbudget
sum(solution_hruse)
colsum(solution_hruse)
Colsums(solution_hruse)
colSums(solution_hruse)
total_hruse
cons_hr.limit_base
6211/3819
total_hruse/cons_hr.limit_base
weep(solution_hruse, 2, cons_hr.limit_base, FUN = '/')
sweep(solution_hruse, 2, cons_hr.limit_base, FUN = '/')
solution_hruse[,1:3]
cons_hr.limit_base
gen_resourceuse_graphs <- function(plot_title, plot_subtitle, file_name){
#pal <- viridisLite::viridis(10) # Create a viridis palette for the graph
pal <- rainbow(12)
## Generate matrix representing HR and Drug budget use by the HBP solution run above
#***********************************************************************************
# HR Resource Use
data_hr <- sweep(solution_hruse[,1:3], 2, cons_hr.limit_base, FUN = '/')
data_hr <- data_hr[,1:3]
hr_cadres <- c("Clinical \nstaff", "Nursing \nstaff", "Pharmaceutical \nstaff") # , "Laboratory \nstaff"
# Drug budget Use
data_drug <- as.matrix(solution_drugexp)/cons_drug.limit_base
assert(length(data_drug) == dim(data_hr)[1]) # Assert that the length of the directions list is the same as that of the constraints matrix
# Combine all resource use matrices into one matrix
data <- cbind(data_hr,data_drug)
data <- as.matrix(data)
data <- cbind(category,data)
## Convert to long form in order to apply ggplot
#***********************************************************************************
data <- as.data.frame(data)
colnames(data) <- c('category', hr_cadres, 'Drug \nbudget')
data_long <<- gather(data, resource, use, 2:'Drug \nbudget', factor_key=TRUE)
data_long$use <<- as.numeric(data_long$use) # convert use data to numeric
## Generate graph
#***********************************************************************************
p <- ggplot(data = data_long, aes(x = resource, y = use)) +
geom_col(aes(fill = category), width = 0.7)
#+geom_text(aes(y = lab_ypos, label = intcode, group =intcode), color = "white") # add data labels
p <- p + guides(fill=guide_legend(nrow=2,byrow=TRUE)) +
scale_y_continuous(labels = percent)+
geom_text(aes(label = stat(sprintf("%1.1f%%", round(100*y, digits = 2))), group = resource), stat = 'summary', fun = sum, vjust = -1, size=4)+
theme_classic()# show total labels on the top
titleformats <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = 17, hjust=0.5),
legend.text = element_text(face = "italic", colour="black",family = "Helvetica"),
legend.title = element_blank(), # remove legend title
axis.title = element_text(family = "Helvetica", size = (15), colour = "black"),
axis.text.x = element_text(face="bold", color="black", size=10, angle=0),
axis.text.y = element_text(face="bold", color="black", size=10, angle=0),
legend.position="bottom",
plot.subtitle=element_text(size=12, hjust=0.5, face="italic", color="black"))
print(p + titleformats + labs( title= plot_title, subtitle = plot_subtitle,
x="Resource", y = "Percentage of resource required") + scale_fill_manual(values = pal))+
guides(fill=guide_legend(nrow=4, byrow=TRUE))
# Save graph with the assigned title
ggsave(file_name, width = 20, height = 20, units = "cm")
}
# For constrained optimisation, we only consider interventions which are not funded from the non-fungible part of the
# budget
df_fungible <- df[df$donor_funded == "No", ]
drug_budget.fungible <- base.drugbudget - 172324161
find_optimal_package(data.frame = df_fungible, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = drug_budget.fungible, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = no.hr.limit,
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
scen7_fungible = cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
scen7_coverage_fungible = solution
scen7_coverage_fungible = cbind(category, code,  intervention, solution)
colnames(scen7_coverage_fungible) = c("Program", "code", "Intervention", "Coverage")
# For the final solution, update the above results to include interventions funded from the non-fungible component of the budget
# Since, the non-fungible drug budget is smaller that the cost of 100% cover of these interventions, the coverage is scaled down
# in order to get a package which is feasible to deliver within the size of the drug budget
drug_budget.nonfungible <- 172324161 + (1-drug_exp.prop) * drug_budget.fungible # in case any budget remains after the above analysis
df_nonfungible <- df[df$donor_funded == "Yes", ]
df_nonfungible$conscost_maxcoverage <- df_nonfungible$conscost * as.numeric(df_nonfungible$feascov) *
as.numeric(df_nonfungible$pop_size) * as.numeric(df_nonfungible$pop_pin)
scalingfactor_nonfungible <- drug_budget.nonfungible/sum(df_nonfungible$conscost_maxcoverage)
scen7_coverage_nonfungible <- df_nonfungible[c("category", "code",  "intervention")]
scen7_coverage_nonfungible$coverage =  as.numeric(df_nonfungible$feascov)  * scalingfactor_nonfungible
colnames(scen7_coverage_nonfungible) = c("Program", "code", "Intervention", "Coverage")
scen7_coverage <- rbind(scen7_coverage_fungible, scen7_coverage_nonfungible)
merged_df = merge(x = df, y = scen7_coverage, by = "code",
all.x = TRUE)
pos_nethealth.count <- sum(as.numeric(merged_df$ce_cost)/as.numeric(merged_df$ce_dalys) <= base.cet)
intervention.count <- sum(merged_df$Coverage > 0)
solution_dalysaverted <- merged_df$Coverage * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size) * as.numeric(merged_df$ce_dalys)
dalys_averted <- round(sum(unlist(lapply(solution_dalysaverted, sum))),2)
merged_df$icer = as.numeric(merged_df$ce_cost)/as.numeric(merged_df$ce_dalys)
cet_soln <- max(merged_df$icer[merged_df$Coverage > 0])
solution_drugexp <- merged_df$Coverage * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size) * as.numeric(merged_df$conscost)
drug_exp.prop <- round(sum(unlist(lapply(solution_drugexp, sum))),2)/base.drugbudget
hrneed <- merged_df[c("hr_medoff", "hr_clinoff", "hr_medass",
"hr_nuroff", "hr_nurtech",
"hr_pharm", "hr_pharmtech", "hr_pharmass",
"hr_laboff", "hr_labtech", "hr_labass")] # Number of minutes of health worker time requires per intervention per person
hrneed <- as.data.frame(apply(hrneed,2,as.numeric))
hr_minutes_need <- hrneed * as.numeric(merged_df$pop_pin) * as.numeric(merged_df$pop_size)  # HR minutes required to deliver intervention to all cases in need
medstaff.need <- hr_minutes_need[c("hr_medoff")] + hr_minutes_need[c("hr_clinoff")] + hr_minutes_need[c("hr_medass")] # Medical officer + Clinical officer + Medical Assistant
nursingstaff.need <- hr_minutes_need[c("hr_nuroff")] + hr_minutes_need[c("hr_nurtech")] # Nurse officer + Nurse midwife
pharmstaff.need <- hr_minutes_need[c("hr_pharm")] + hr_minutes_need[c("hr_pharmtech")] + hr_minutes_need[c("hr_pharmass")] # Pharmacist + Pharmacist Technician + Pharmacist Assistant
labstaff.need <- hr_minutes_need[c("hr_laboff")] + hr_minutes_need[c("hr_labtech")] + hr_minutes_need[c("hr_labass")] # Lab officer + Lab technician + Lab assistant
solution_hruse <- merged_df$Coverage * cbind(medstaff.need/(medstaffmins.limit/medstaff.limit), nursingstaff.need/(nursingstaffmins.limit/nursingstaff.limit),
pharmstaff.need/(pharmstaffmins.limit/pharmstaff.limit), labstaff.need/(labstaffmins.limit/labstaff.limit))
total_hruse <- colSums(solution_hruse, na.rm = FALSE, dims = 1) # Number of minutes per health worker cadre utlitised by the optimal solution
hruse.prop <- round(total_hruse/cons_hr.limit_base, 2)  # Proportion of HR time available used by the optimal solution
hr_cadres <- c("Clinical", "Nursing", "Pharmaceutical", "Lab")
colnames(hruse.prop) <- hr_cadres
scen7 <- cbind.data.frame(pos_nethealth.count, intervention.count, dalys_averted, cet_soln, drug_exp.prop, hruse.prop)
# Generate resource use graph for scenario 7
cons_drug.limit_base <- base.drugbudget # re-adjust since this will be equal to only government budget
cons_hr.limit_base <- cons_hr.limit_base[,1:3]
gen_resourceuse_graphs(plot_title = "Scenario 7" , plot_subtitle = "CET = $66 + Demand constraint + Drug Budget \n+ Donor constraints ", file_name = "2_outputs/figures/resourceuse_scen7.pdf")
capture.output(
find_optimal_package(data.frame = data.frame, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = base.drugbudget, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = base.hr,
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
)
nhb_base <- solution.class$objval
prop_1med = 1 / cons_hr.limit.saved[,1]
capture.output(
find_optimal_package(data.frame = data.frame, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = base.drugbudget, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = c(1+prop_1med,1,1,1),
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
)
nhb_1med <- solution.class$objval
annual_salary_med <- 3684.67
value_1med <- (nhb_1med - nhb_base)/annual_salary_med
# ii. Shadow price of nursing staff
prop_1nurse = 1 / cons_hr.limit.saved[,2]
capture.output(
find_optimal_package(data.frame = data.frame, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = base.drugbudget, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = c(1,1 + prop_1nurse,1,1),
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
)
nhb_1nurse <- solution.class$objval
annual_salary_nurse <- 3214.77
value_1nurse <- (nhb_1nurse - nhb_base)/annual_salary_nurse
# iii. Shadow price of pharma staff
prop_1pharm = 1 / cons_hr.limit.saved[,3]
capture.output(
find_optimal_package(data.frame = data.frame, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = base.drugbudget, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = c(1,1,1+prop_1pharm,1),
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
)
nhb_1pharm <- solution.class$objval
annual_salary_pharm <- 2821.94
value_1pharm <- (nhb_1pharm - nhb_base)/annual_salary_pharm
# iii. Shadow price of drug budget
prop_1pharm = 1 / cons_hr.limit.saved[,3]
capture.output(
find_optimal_package(data.frame = data.frame, objective_input = "nethealth", cet_input = base.cet,
drug_budget_input = base.drugbudget+1, drug_budget.scale = 1,
hr.time.constraint = hr.time.constraint, hr.size = hr.size, hr.scale = c(1,1,1,1),
use_feasiblecov_constraint = 1, feascov_scale = 1, compcov_scale = 1,
compulsory_interventions = NULL, substitutes = subs_list, task_shifting_pharm = 1)
)
nhb_1drug <- solution.class$objval
value_1drug <- (nhb_1drug - nhb_base)
print("MARGINAL PRODUCTIVITY IN DALYS OF 1000 DOLLARS SPENT ON ...")
print("#####################################")
shadowprice_table = rbind(value_1drug, value_1med, value_1nurse, value_1pharm)
shadowprice_table = round(shadowprice_table*1000,2)
shadowprice_table
print("MARGINAL PRODUCTIVITY IN DALYS OF 1000 DOLLARS SPENT ON ...")
print("#####################################")
shadowprice_table = rbind(value_1drug, value_1med, value_1nurse, value_1pharm)
shadowprice_table = round(shadowprice_table*1000,2)
hs_components = c('Drug budget', 'Doctor/Medical officer time', 'Nurse time', 'Pharmacist time')
# Extract marginal value figure
pdf("2_outputs/figures/marginalvalue_hss.pdf")
par(mar=c(4,11,4,4))
y <- barplot(height = rev(t(shadowprice_table)), names = rev(hs_components), width = 1 ,
space=NULL, las = 1, horiz=T,
xlim=c(0,800), ylab = "", xlab = "Net DALYs averted",
main="Marginal value of $1000 spent on Health systems components")
#text(y, 0, round(rev(t(shadowprice_table)),2),cex=1, pos=1)
x <-as.matrix(rev(t(shadowprice_table)))
text(x+100,y,labels=as.character(round(x,3)))
dev.off()
